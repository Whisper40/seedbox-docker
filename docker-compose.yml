version: '2'
services:
###################################
#  TRAEFIK
###################################
  traefik:
    image: traefik:latest
    command: >
      --global.checkNewVersion=true
      --global.checkNewVersion=true
      --global.sendAnonymousUsage=true
      --entryPoints.http.address=:80
      --entryPoints.https.address=:443
      --entryPoints.traefik.address=:8080
      --api=true
      --log=true
      --log.level=DEBUG
      --accessLog=true
      --accessLog.filePath=/log/traefik.log
      --accessLog.bufferingSize=100
      --accessLog.filters.statusCodes=400-499
      --providers.docker=true
      --providers.docker.endpoint=unix:///var/run/docker.sock
      --providers.docker.exposedByDefault=false
      --providers.docker.network=traefik_proxy
      --providers.docker.swarmMode=false
      --providers.file.directory=/rules
      --providers.file.watch=true
      --certificatesResolvers.letsencrypt.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      --certificatesResolvers.letsencrypt.acme.email='${MAIL_ADDRESS}'
      --certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFIG_DIR/traefik:/etc/traefik/acme
      - $CONFIG_DIR/certs:/certs
      - $CONFIG_DIR/traefik.log:/log
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`${ADMIN_URL}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:${passwd_admin}"
    container_name: traefik
##########################################
# Portainer 
##########################################
  portainer:
    image: portainer/portainer
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFIG_DIR/portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.entrypoints=https"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_URL}`) "
      - "traefik.http.routers.portainer.service=portainer-svc"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"

#########################################
# Plex
#########################################
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /home/plex/config:/config
      - /home:/home
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex-router.entrypoints=https"
      - "traefik.http.routers.plex-router.service=plex-svc"
      - "traefik.http.routers.plex-router.rule=Host(`${PLEX_URL}`) "
      - "traefik.http.routers.plex-router.tls=true"
      - "traefik.http.services.plex-svc.loadbalancer.server.port=32400"

###########################################
# FTP
###########################################
  ftp:
    image: stilliard/pure-ftpd:hardened
    volumes: 
      - $CONFIG_DIR/ftp:/etc/pure-ftpd/passwd
      - $DATA_DIR:/home/ftpusers
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    container_name: "pure_ftp_seedbox"
############################################
# Postfix
############################################
  postfix:
    image: mwader/postfix-relay
    environment:
      - POSTFIX_myhostname=${BASE_URL}
      - OPENDKIM_DOMAINS=${BASE_URL} ${ADMIN_URL}
    volumes:
      - ${CONFIG_DIR}/postfix:/etc/opendkim/keys
##########################################
# Watchtower
##########################################
  watchtower:
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    image: containrrr/watchtower
    command: --cleanup --schedule "0 0 4 * * *"
